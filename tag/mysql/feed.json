{
    "version": "https://jsonfeed.org/version/1",
    "title": "望月阁 • All posts by \"mysql\" tag",
    "description": "一个萌新的学习笔记",
    "home_page_url": "http://sjtblog.cn",
    "items": [
        {
            "id": "http://sjtblog.cn/pages/MySQL/mysql/",
            "url": "http://sjtblog.cn/pages/MySQL/mysql/",
            "title": "MySQL快速入门",
            "date_published": "2023-10-14T08:13:42.000Z",
            "content_html": "<meta name=\"referrer\" content=\"no-referrer\" />\n<h1 id=\"mysql快速入门\"><a class=\"markdownIt-Anchor\" href=\"#mysql快速入门\">#</a> MySQL 快速入门</h1>\n<h2 id=\"操作数据库\"><a class=\"markdownIt-Anchor\" href=\"#操作数据库\">#</a> 操作数据库</h2>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查看当前数据库下所有表。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">desc</span> student<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查询表结构。（desc 表名；）（desc 为 describe 的缩写）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> emp<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 创建数据库。（create database 数据库名）</span></pre></td></tr></table></figure><h3 id=\"查询数据库\"><a class=\"markdownIt-Anchor\" href=\"#查询数据库\">#</a> 查询数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">database</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 查询显示所有数据库。</span></pre></td></tr></table></figure><h3 id=\"使用数据库\"><a class=\"markdownIt-Anchor\" href=\"#使用数据库\">#</a> 使用数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">use</span> petrichor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- use 数据库名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 切换数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 如果 数据库名 是特殊字符 就需要用 ``包起来。如：`petrichor`</span></pre></td></tr></table></figure><h3 id=\"创建数据库\"><a class=\"markdownIt-Anchor\" href=\"#创建数据库\">#</a> 创建数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- create database 数据库名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 创建一个名为 petrichor 的数据库。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- create database [if not exists] 数据库名；</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 如果不存在名为 petrichor 的数据库，则创建一个名为 petrichor 的数据库。</span></pre></td></tr></table></figure><h3 id=\"删除数据库\"><a class=\"markdownIt-Anchor\" href=\"#删除数据库\">#</a> 删除数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- drop database 数据库名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 删除名为 petrichor 的数据库。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- drop database [if exists] 数据库名；</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 如果存在名为 petrichor 的数据库，则删除 petrichor 数据库。</span></pre></td></tr></table></figure><h3 id=\"数据库的列类型\"><a class=\"markdownIt-Anchor\" href=\"#数据库的列类型\">#</a> 数据库的列类型</h3>\n<ol>\n<li>\n<p><strong>数值</strong></p>\n<blockquote>\n<p>tinyint   十分小的数据  占 1 个字节</p>\n<p>smallint  较小的数据    占 2 个字节</p>\n<p>Mediumint 中等大小的数据 占 3 个字节</p>\n<p><strong>int      标准的整型 占 4 个字节  常用</strong></p>\n<p>bigint 较大的数据 占 8 个字节</p>\n<p>float 浮点数 占 4 个字节</p>\n<p>double 浮点数 占 8 个字节（精度问题）</p>\n<p>decimal 字符串形式的浮点数 金融计算的时候，一般是使用 decimal</p>\n</blockquote>\n</li>\n<li>\n<p><strong>字符串</strong></p>\n<blockquote>\n<p>char 字符串 固定大小 0～255</p>\n<p><strong>varchar 可变字符串 0~65535 常用的</strong></p>\n<p>tinytext 微型文本 2^8-1</p>\n<p><strong>text 文本串 2^16-1 保存大文本</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>时间日期</strong></p>\n<blockquote>\n<p>date YYYY-MM-DD 日期格式</p>\n<p>time HH:MM:SS 时间格式</p>\n<p><strong>datetime YYYY-MM-DD HH:MM:SS 最常用的时间格式</strong></p>\n<p><strong>timestamp 时间戳 1970.1.1 到现在的毫秒数 也较为常用</strong></p>\n<p>year 年份表示</p>\n</blockquote>\n</li>\n<li>\n<p><strong>null</strong></p>\n<blockquote>\n<p>没有值，未知</p>\n<p>注意：不要使用 null 进行运算，结果为 null</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"数据库的字段属性重点\"><a class=\"markdownIt-Anchor\" href=\"#数据库的字段属性重点\">#</a> 数据库的字段属性（重点）</h3>\n<p><strong>Unsigned:</strong></p>\n<ul>\n<li>\n<p>无符号的整数</p>\n</li>\n<li>\n<p>声明了该列不能声明为负数</p>\n</li>\n</ul>\n<p><strong>zerofill:</strong></p>\n<ul>\n<li>0 填充的</li>\n<li>不足的位数，使用 0 来填充</li>\n<li>举例：int (3),5 — 005</li>\n</ul>\n<p><strong>自增：</strong></p>\n<ul>\n<li>通常理解为自增，自动在上一条记录的基础上 + 1（默认）</li>\n<li>通常用来设计唯一的主键，必须是整数类型</li>\n<li>可以自定义设置主键自增的起始值和步长</li>\n</ul>\n<p><strong>非空：</strong></p>\n<ul>\n<li>假设设置为 not null，如果不给它赋值，就会报错</li>\n<li>null 如果不填写值，默认就是 null</li>\n</ul>\n<p><strong>默认：</strong></p>\n<ul>\n<li>设置默认的值</li>\n<li>sex 默认值设为男 如果不指定该列的值，则会有默认的值</li>\n</ul>\n<h2 id=\"操作数据库表\"><a class=\"markdownIt-Anchor\" href=\"#操作数据库表\">#</a> 操作数据库表</h2>\n<h3 id=\"创建数据库表\"><a class=\"markdownIt-Anchor\" href=\"#创建数据库表\">#</a> 创建数据库表</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span><span class=\"token punctuation\">]</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>表名称<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t字段名称<span class=\"token number\">1</span> 字段数据类型<span class=\"token punctuation\">(</span>字段长度<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span> <span class=\"token string\">'默认值'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">comment</span> <span class=\"token string\">'备注'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  字段名称<span class=\"token number\">2</span> 字段数据类型<span class=\"token punctuation\">(</span>字段长度<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  字段名称<span class=\"token number\">3</span> 字段数据类型<span class=\"token punctuation\">(</span>字段长度<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">[</span><span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>字段名称<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">engine</span><span class=\"token operator\">=</span><span class=\"token keyword\">innodb</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- [] 为可选 可有可无 根据需求（用的时候不要加中括号 上面只是演示）</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 字段名称 或 表名称 最好用 `` 包起来 table 上面哪个键 原因请看上面使用数据库里</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">-- if not exists 用处同上创建数据库 可选</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- not null 非空</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">-- default '' 默认值</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">-- auto_increment 自增</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">-- primary key 主键（一般一个表只有一个唯一的主键）可以写在字段里 但是推荐写在最下面。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- comment '' 备注</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 举例：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 现在我们想要创建一个名为 \"Persons\" 的表，包含五列：PersonID (主键)、LastName、FirstName、Address 和 City。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 我们使用下面的 CREATE TABLE 语句：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Persons</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tPersonID <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tLastName <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tFirstName <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tAddress <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tCity <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>PersonID<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "MySQL"
            ]
        }
    ]
}