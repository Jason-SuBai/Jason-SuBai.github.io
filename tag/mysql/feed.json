{
    "version": "https://jsonfeed.org/version/1",
    "title": "望月阁 • All posts by \"mysql\" tag",
    "description": "一个萌新的学习笔记",
    "home_page_url": "http://sjtblog.cn",
    "items": [
        {
            "id": "http://sjtblog.cn/pages/MySQL/mysql/",
            "url": "http://sjtblog.cn/pages/MySQL/mysql/",
            "title": "MySQL快速入门",
            "date_published": "2023-10-14T08:13:42.000Z",
            "content_html": "<meta name=\"referrer\" content=\"no-referrer\" />\n<h1 id=\"mysql快速入门\"><a class=\"markdownIt-Anchor\" href=\"#mysql快速入门\">#</a> MySQL 快速入门</h1>\n<h2 id=\"操作数据库\"><a class=\"markdownIt-Anchor\" href=\"#操作数据库\">#</a> 操作数据库</h2>\n<h3 id=\"查询数据库\"><a class=\"markdownIt-Anchor\" href=\"#查询数据库\">#</a> 查询数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">database</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 查询显示所有数据库。</span></pre></td></tr></table></figure><h3 id=\"使用数据库\"><a class=\"markdownIt-Anchor\" href=\"#使用数据库\">#</a> 使用数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">use</span> petrichor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- use 数据库名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 切换数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 如果 数据库名 是特殊字符 就需要用 ``包起来。如：`petrichor`</span></pre></td></tr></table></figure><h3 id=\"创建数据库\"><a class=\"markdownIt-Anchor\" href=\"#创建数据库\">#</a> 创建数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- create database 数据库名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 创建一个名为 petrichor 的数据库。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- create database [if not exists] 数据库名；</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 如果不存在名为 petrichor 的数据库，则创建一个名为 petrichor 的数据库。</span></pre></td></tr></table></figure><h3 id=\"查询创建数据库的语句\"><a class=\"markdownIt-Anchor\" href=\"#查询创建数据库的语句\">#</a> 查询创建数据库的语句</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>表名<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"删除数据库\"><a class=\"markdownIt-Anchor\" href=\"#删除数据库\">#</a> 删除数据库</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- drop database 数据库名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 删除名为 petrichor 的数据库。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> petrichor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- drop database [if exists] 数据库名；</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 如果存在名为 petrichor 的数据库，则删除 petrichor 数据库。</span></pre></td></tr></table></figure><h3 id=\"数据库的列类型\"><a class=\"markdownIt-Anchor\" href=\"#数据库的列类型\">#</a> 数据库的列类型</h3>\n<ol>\n<li>\n<p><strong>数值</strong></p>\n<blockquote>\n<p>tinyint   十分小的数据  占 1 个字节</p>\n<p>smallint  较小的数据    占 2 个字节</p>\n<p>Mediumint 中等大小的数据 占 3 个字节</p>\n<p><strong>int      标准的整型 占 4 个字节  常用</strong></p>\n<p>bigint 较大的数据 占 8 个字节</p>\n<p>float 浮点数 占 4 个字节</p>\n<p>double 浮点数 占 8 个字节（精度问题）</p>\n<p>decimal 字符串形式的浮点数 金融计算的时候，一般是使用 decimal</p>\n</blockquote>\n</li>\n<li>\n<p><strong>字符串</strong></p>\n<blockquote>\n<p>char 字符串 固定大小 0～255</p>\n<p><strong>varchar 可变字符串 0~65535 常用的</strong></p>\n<p>tinytext 微型文本 2^8-1</p>\n<p><strong>text 文本串 2^16-1 保存大文本</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>时间日期</strong></p>\n<blockquote>\n<p>date YYYY-MM-DD 日期格式</p>\n<p>time HH:MM:SS 时间格式</p>\n<p><strong>datetime YYYY-MM-DD HH:MM:SS 最常用的时间格式</strong></p>\n<p><strong>timestamp 时间戳 1970.1.1 到现在的毫秒数 也较为常用</strong></p>\n<p>year 年份表示</p>\n</blockquote>\n</li>\n<li>\n<p><strong>null</strong></p>\n<blockquote>\n<p>没有值，未知</p>\n<p>注意：不要使用 null 进行运算，结果为 null</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"数据库的字段属性重点\"><a class=\"markdownIt-Anchor\" href=\"#数据库的字段属性重点\">#</a> 数据库的字段属性（重点）</h3>\n<p><strong>Unsigned:</strong></p>\n<ul>\n<li>\n<p>无符号的整数</p>\n</li>\n<li>\n<p>声明了该列不能声明为负数</p>\n</li>\n</ul>\n<p><strong>zerofill:</strong></p>\n<ul>\n<li>0 填充的</li>\n<li>不足的位数，使用 0 来填充</li>\n<li>举例：int (3),5 — 005</li>\n</ul>\n<p><strong>自增：</strong></p>\n<ul>\n<li>通常理解为自增，自动在上一条记录的基础上 + 1（默认）</li>\n<li>通常用来设计唯一的主键，必须是整数类型</li>\n<li>可以自定义设置主键自增的起始值和步长</li>\n</ul>\n<p><strong>非空：</strong></p>\n<ul>\n<li>假设设置为 not null，如果不给它赋值，就会报错</li>\n<li>null 如果不填写值，默认就是 null</li>\n</ul>\n<p><strong>默认：</strong></p>\n<ul>\n<li>设置默认的值</li>\n<li>sex 默认值设为男 如果不指定该列的值，则会有默认的值</li>\n</ul>\n<h2 id=\"操作数据库表\"><a class=\"markdownIt-Anchor\" href=\"#操作数据库表\">#</a> 操作数据库表</h2>\n<h3 id=\"查询数据库表\"><a class=\"markdownIt-Anchor\" href=\"#查询数据库表\">#</a> 查询数据库表</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 查看当前数据库下所有表。</span></pre></td></tr></table></figure><h3 id=\"查询数据库表结构\"><a class=\"markdownIt-Anchor\" href=\"#查询数据库表结构\">#</a> 查询数据库表结构</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">desc</span> student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 查询表结构。（desc 表名；）（desc 为 describe 的缩写）</span></pre></td></tr></table></figure><h3 id=\"创建数据库表\"><a class=\"markdownIt-Anchor\" href=\"#创建数据库表\">#</a> 创建数据库表</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span><span class=\"token punctuation\">]</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>表名称<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t字段名称<span class=\"token number\">1</span> 字段数据类型<span class=\"token punctuation\">(</span>字段长度<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span> <span class=\"token string\">'默认值'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">comment</span> <span class=\"token string\">'备注'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  字段名称<span class=\"token number\">2</span> 字段数据类型<span class=\"token punctuation\">(</span>字段长度<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  字段名称<span class=\"token number\">3</span> 字段数据类型<span class=\"token punctuation\">(</span>字段长度<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">[</span><span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>字段名称<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">engine</span><span class=\"token operator\">=</span><span class=\"token keyword\">innodb</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- [] 为可选 可有可无 根据需求（用的时候不要加中括号 上面只是演示）</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 字段名称 或 表名称 最好用 `` 包起来 table 上面哪个键 原因请看上面使用数据库里</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">-- if not exists 用处同上创建数据库 可选</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- not null 非空</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">-- default '' 默认值</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">-- auto_increment 自增</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">-- primary key 主键（一般一个表只有一个唯一的主键）可以写在字段里 但是推荐写在最下面。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- comment '' 备注</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">-- engine=innodb 设置数据库引擎为 innodb</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">-- charset=utf8 设置数据库的字符集为 utf8（不设置的话是 mysql 默认的字符集编码 Latin1 不支持中文 ）</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 举例：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 现在我们想要创建一个名为 \"Persons\" 的表，包含五列：PersonID (主键)、LastName、FirstName、Address 和 City。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 我们使用下面的 CREATE TABLE 语句：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Persons</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tPersonID <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tLastName <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tFirstName <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tAddress <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tCity <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>PersonID<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"查询创建数据库表的定义语句\"><a class=\"markdownIt-Anchor\" href=\"#查询创建数据库表的定义语句\">#</a> 查询创建数据库表的定义语句</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>表名<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 举例：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 查询上面的 Persons 表</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> Persons<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 就会知道创建 Persons 的语句</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>create table Persons</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>(</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tPersonID int,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tLastName varchar(255),</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tFirstName varchar(255),</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tAddress varchar(255),</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tCity varchar(255),</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  primary key(`PersonID`)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>);</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>*/</span></pre></td></tr></table></figure><h3 id=\"删除数据库表\"><a class=\"markdownIt-Anchor\" href=\"#删除数据库表\">#</a> 删除数据库表</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span><span class=\"token punctuation\">]</span> Persons<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- drop table [if exists] 表名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 如果存在 Persons 表，则删除</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- if exists 如果存在</span></pre></td></tr></table></figure><blockquote>\n<p><strong>所有的创建和删除操作尽量加上判断，以免报错。</strong></p>\n</blockquote>\n<h3 id=\"修改表名\"><a class=\"markdownIt-Anchor\" href=\"#修改表名\">#</a> 修改表名</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> Persons <span class=\"token keyword\">rename</span> <span class=\"token keyword\">as</span> student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- alter table 旧表名 rename as 新表名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 以上命令是把 Persons 表名改为 student</span></pre></td></tr></table></figure><h3 id=\"增加表的字段\"><a class=\"markdownIt-Anchor\" href=\"#增加表的字段\">#</a> 增加表的字段</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> student <span class=\"token keyword\">add</span> age <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- alter table 表名 add 字段名 字段数据类型 (字段长度);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 给 student 表增加名为 age 的字段 为 int 型</span></pre></td></tr></table></figure><h3 id=\"修改表的字段重命名-修改约束\"><a class=\"markdownIt-Anchor\" href=\"#修改表的字段重命名-修改约束\">#</a> 修改表的字段（重命名、修改约束）</h3>\n<p><strong>修改字段类型</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> student <span class=\"token keyword\">modify</span> age <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- alter table 表名 modify 字段名 字段数据类型 (字段长度);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 将 student 表的 age 字段修改为 varchar 类型</span></pre></td></tr></table></figure><p><strong>修改字段名</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> student change age age1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- alter table 表名 change 旧字段名 新字段名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 将 student 表中的 age 字段名修改为 age1</span></pre></td></tr></table></figure><blockquote>\n<p><code>modify</code>  和 <code>change</code>  的区别：</p>\n<p><code>modify</code>  能修改字段类型和约束，而 <code>change</code>  不行。</p>\n<p>结论：</p>\n<ul>\n<li><code>change</code>  用来字段重命名，不能修改字段类型和约束。</li>\n<li><code>modify</code>  不用来字段重命名，只能修改字段类型和约束。</li>\n</ul>\n</blockquote>\n<h3 id=\"删除表的字段\"><a class=\"markdownIt-Anchor\" href=\"#删除表的字段\">#</a> 删除表的字段</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> student <span class=\"token keyword\">drop</span> age1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- alter table 表名 drop 字段名；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 将 student 表中的 age1 字段删除</span></pre></td></tr></table></figure><h3 id=\"关于外键了解\"><a class=\"markdownIt-Anchor\" href=\"#关于外键了解\">#</a> 关于外键（了解）</h3>\n<p>现有两张表 <code>grade</code>  和 <code>student</code> ：</p>\n<ul>\n<li>学生表的 <code>gradeid</code>  字段要去引用年级表的 <code>gradeid</code></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- grade 表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>grade<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'年级id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradename<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'年级名称'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token keyword\">engine</span><span class=\"token operator\">=</span><span class=\"token keyword\">innodb</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- student 表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学号'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'匿名'</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'姓名'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gender<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'女'</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>birthday<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'出生日期'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学生的年级'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'家庭住址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>email<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token keyword\">engine</span><span class=\"token operator\">=</span><span class=\"token keyword\">innodb</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>方式一：在创建表的时候，增加约束（比较复杂）</p>\n</blockquote>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">auto_increment</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学号'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'匿名'</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'姓名'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gender<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'女'</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>birthday<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'出生日期'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学生的年级'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'家庭住址'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>email<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'邮箱'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">key</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>FK_gradeid<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">constraint</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>FK_gradeid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">references</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>grade<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token keyword\">engine</span><span class=\"token operator\">=</span><span class=\"token keyword\">innodb</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">charset</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- key `FK_gradeid` (`gradeid`)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">-- 定义外键 key FK_gradeid 为外键名</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">-- FK_为通用的外键名（只是命名而已 为 foreign key 的缩写） 看到这个就知道他是一个外键</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">-- constraint `FK_gradeid` foreign key (`gradeid`) references `grade`(`gradeid`)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">-- 给这个外键添加约束（执行引用）</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">-- constraint（约束） foreign key（外键） references（引用）</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">-- 约束 `FK_gradeid` foreign key (`gradeid`) 引用自 grade 表的 gradeid 属性</span></pre></td></tr></table></figure><p>删除有外键关系的表的时候，必须要先删除引用别人的表（从表），再删除被引用的表（主表）</p>\n<blockquote>\n<p>方式二：创建表的时候没有外键关系，创建表成功后，添加外键约束</p>\n</blockquote>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">add</span> <span class=\"token keyword\">constraint</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>FK_gradeid<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">references</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>grade<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- alter table 表名 add constraint 约束名 foreign key (作为外键的字段) references 哪个表 (哪个字段);</span></pre></td></tr></table></figure><blockquote>\n<p><strong>注意：以上的操作都是物理外键，数据库级别的外键，不建议使用！！（避免数据库过多造成困扰，这里了解即可）</strong></p>\n<ul>\n<li>包括在阿里巴巴 JAVA 规范中也有一条</li>\n<li>【强制】不得使用外键与级联，一切外键概念必须在应用层解决。</li>\n</ul>\n<p><strong>最佳实践：</strong></p>\n<ul>\n<li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）</li>\n<li>我们想使用多张表的数据，想使用外键（程序去实现）</li>\n</ul>\n</blockquote>\n<h2 id=\"操作数据库表数据\"><a class=\"markdownIt-Anchor\" href=\"#操作数据库表数据\">#</a> 操作数据库表数据</h2>\n<h3 id=\"插入数据\"><a class=\"markdownIt-Anchor\" href=\"#插入数据\">#</a> 插入数据</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>grade<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradename<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'大三'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- insert into 表名 ([字段 1，字段 2，字段 3...]) values (' 值 1'),(' 值 2'),(' 值 3'), (...);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 在 grade 表中插入一行 gradename 为大三的数据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 因为 gradeid 为主键自增可以省略</span></pre></td></tr></table></figure><blockquote>\n<p>一般写插入语句，一定要数据和字段一一对应！</p>\n</blockquote>\n<p>插入多条数据：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>grade<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradename<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'大二'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'大一'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- insert into 表名 ([字段 1，字段 2，字段 3...]) values (' 值 1'),(' 值 2'),(' 值 3'), (...);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 在 grade 表中插入两行 gradename 数据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gender<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>gradeid<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 在 student 表中 插入一条数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- name gender gradeid 字段分别为 张三 男 1</span></pre></td></tr></table></figure><blockquote>\n<p>注意事项：</p>\n<ul>\n<li>字段和字段之间使用 英文逗号 隔开</li>\n<li>字段是可以省略的，但是后面的值必须要一一对应，不能少</li>\n<li>如果在建表的时候字段设置成非空，并且没有给默认值，那么插入数据的时候必须给此字段插入值，否则报错！</li>\n<li>可以同时插入多条数据，values 后面的值，想要使用 英文逗号 隔开 <code>values  (),(),...</code></li>\n</ul>\n</blockquote>\n<h3 id=\"修改数据\"><a class=\"markdownIt-Anchor\" href=\"#修改数据\">#</a> 修改数据</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">update</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">set</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'petrichor'</span> <span class=\"token keyword\">where</span> id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- update 被修改的表名 set [字段名 1 = 修改后的值],[字段名 2 = 修改后的值],... where 条件 (修改谁);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 如果不指定条件 会修改所有数据！！！</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">update</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">set</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 此条语句会更改所有数据的 name 为张三</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 修改多个属性用逗号隔开</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">update</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">set</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'petrichor'</span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>email<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'su_zi_chen@163.com'</span> <span class=\"token keyword\">where</span> id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>条件：where 子句 运算符</p>\n<p>操作符会返回布尔值</p>\n<table>\n<thead>\n<tr>\n<th>操作符</th>\n<th>含义</th>\n<th>范围</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td>等于</td>\n<td>5=6</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&lt;&gt; 或！=</td>\n<td>不等于</td>\n<td>5&lt;&gt;6</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n<td>5&gt;6</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n<td>5&lt;6</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于等于</td>\n<td>5&gt;=6</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于等于</td>\n<td>5&lt;=6</td>\n<td>true</td>\n</tr>\n<tr>\n<td>between…and…</td>\n<td>表示范围，从哪到哪，闭区间</td>\n<td>[2,5]</td>\n<td></td>\n</tr>\n<tr>\n<td>and</td>\n<td>与</td>\n<td>5&gt;1 and 1&gt;2</td>\n<td>false</td>\n</tr>\n<tr>\n<td>or</td>\n<td>或</td>\n<td>5&gt;1 or 1&gt;2</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">update</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">set</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'李四'</span> <span class=\"token keyword\">where</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'petrichor'</span> <span class=\"token operator\">and</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>gender<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 将 student 表中 name 为 petrichor 并且 gender 为男 的 name 修改为 李四</span></pre></td></tr></table></figure><blockquote>\n<p>语法：update 被修改的表名 set [字段名 1 = 修改后的值],[字段名 2 = 修改后的值],… where 条件 (修改谁);</p>\n<p><strong>注意：</strong></p>\n<ul>\n<li>条件：筛选的条件，如果没有指定，则会修改所有的数据</li>\n<li>修改后的值可以是一个具体的值，也可以是一个变量</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">update</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">set</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>birthday<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token keyword\">current_time</span> <span class=\"token keyword\">where</span> id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- current_time 当前时间</span></pre></td></tr></table></figure><ul>\n<li>多个设置的属性之间用逗号隔开</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "MySQL"
            ]
        }
    ]
}